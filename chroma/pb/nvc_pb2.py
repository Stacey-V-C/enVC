# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nvc.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nvc.proto',
  package='nvc',
  syntax='proto3',
  serialized_options=b'Z\034github.com/stacey-v-c/nvc/pb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tnvc.proto\x12\x03nvc\"[\n\tSQLAction\x12\x1a\n\x04type\x18\x01 \x01(\x0e\x32\x0c.nvc.SQLtype\x12\r\n\x05table\x18\x02 \x01(\t\x12\x0f\n\x07\x63olumns\x18\x03 \x03(\t\x12\x12\n\nvaluesJson\x18\x04 \x01(\t\"S\n\x0c\x43hromaResult\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x17\n\rinsertedCount\x18\x02 \x01(\x05H\x00\x12\x0f\n\x05\x65rror\x18\x03 \x01(\tH\x00\x42\x08\n\x06result*K\n\x07SQLtype\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\n\n\x06\x43REATE\x10\x01\x12\n\n\x06UPDATE\x10\x02\x12\x0b\n\x07MIGRATE\x10\x03\x12\n\n\x06\x44\x45LETE\x10\x04\x32J\n\x13SQLToChromaListener\x12\x33\n\x0cLogSQLAction\x12\x0e.nvc.SQLAction\x1a\x11.nvc.ChromaResult\"\x00\x42\x1eZ\x1cgithub.com/stacey-v-c/nvc/pbb\x06proto3'
)

_SQLTYPE = _descriptor.EnumDescriptor(
  name='SQLtype',
  full_name='nvc.SQLtype',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CREATE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='UPDATE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIGRATE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DELETE', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=196,
  serialized_end=271,
)
_sym_db.RegisterEnumDescriptor(_SQLTYPE)

SQLtype = enum_type_wrapper.EnumTypeWrapper(_SQLTYPE)
UNSPECIFIED = 0
CREATE = 1
UPDATE = 2
MIGRATE = 3
DELETE = 4



_SQLACTION = _descriptor.Descriptor(
  name='SQLAction',
  full_name='nvc.SQLAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='nvc.SQLAction.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='table', full_name='nvc.SQLAction.table', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='columns', full_name='nvc.SQLAction.columns', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='valuesJson', full_name='nvc.SQLAction.valuesJson', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=109,
)


_CHROMARESULT = _descriptor.Descriptor(
  name='ChromaResult',
  full_name='nvc.ChromaResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='nvc.ChromaResult.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='insertedCount', full_name='nvc.ChromaResult.insertedCount', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error', full_name='nvc.ChromaResult.error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='nvc.ChromaResult.result',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=111,
  serialized_end=194,
)

_SQLACTION.fields_by_name['type'].enum_type = _SQLTYPE
_CHROMARESULT.oneofs_by_name['result'].fields.append(
  _CHROMARESULT.fields_by_name['insertedCount'])
_CHROMARESULT.fields_by_name['insertedCount'].containing_oneof = _CHROMARESULT.oneofs_by_name['result']
_CHROMARESULT.oneofs_by_name['result'].fields.append(
  _CHROMARESULT.fields_by_name['error'])
_CHROMARESULT.fields_by_name['error'].containing_oneof = _CHROMARESULT.oneofs_by_name['result']
DESCRIPTOR.message_types_by_name['SQLAction'] = _SQLACTION
DESCRIPTOR.message_types_by_name['ChromaResult'] = _CHROMARESULT
DESCRIPTOR.enum_types_by_name['SQLtype'] = _SQLTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SQLAction = _reflection.GeneratedProtocolMessageType('SQLAction', (_message.Message,), {
  'DESCRIPTOR' : _SQLACTION,
  '__module__' : 'nvc_pb2'
  # @@protoc_insertion_point(class_scope:nvc.SQLAction)
  })
_sym_db.RegisterMessage(SQLAction)

ChromaResult = _reflection.GeneratedProtocolMessageType('ChromaResult', (_message.Message,), {
  'DESCRIPTOR' : _CHROMARESULT,
  '__module__' : 'nvc_pb2'
  # @@protoc_insertion_point(class_scope:nvc.ChromaResult)
  })
_sym_db.RegisterMessage(ChromaResult)


DESCRIPTOR._options = None

_SQLTOCHROMALISTENER = _descriptor.ServiceDescriptor(
  name='SQLToChromaListener',
  full_name='nvc.SQLToChromaListener',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=273,
  serialized_end=347,
  methods=[
  _descriptor.MethodDescriptor(
    name='LogSQLAction',
    full_name='nvc.SQLToChromaListener.LogSQLAction',
    index=0,
    containing_service=None,
    input_type=_SQLACTION,
    output_type=_CHROMARESULT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SQLTOCHROMALISTENER)

DESCRIPTOR.services_by_name['SQLToChromaListener'] = _SQLTOCHROMALISTENER

# @@protoc_insertion_point(module_scope)
